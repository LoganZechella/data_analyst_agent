# Environment Variables for Enhanced Data Analyzer Agent
# Copy this file to .env and fill in your actual values

# OpenAI API Configuration
OPENAI_API_KEY=your_openai_api_key_here

# MongoDB Atlas Configuration (Enhanced Database Features)
# Get connection string from MongoDB Atlas dashboard
MONGODB_CONNECTION_STRING=mongodb+srv://username:password@cluster.mongodb.net/database?retryWrites=true&w=majority
MONGODB_DATABASE_NAME=your_database_name_here
MONGODB_READ_ONLY=true
MONGODB_MAX_RESULTS=10000
MONGODB_CONNECTION_TIMEOUT=30
MONGODB_POOL_SIZE=5
MONGODB_RETRY_ATTEMPTS=3
MONGODB_RETRY_DELAY=1.0

# MCP Configuration
MCP_MONGODB_ENABLED=true
MCP_SERVER_TIMEOUT=60

# Legacy Python Sandbox Configuration (for custom sandbox if needed)
PYTHON_SANDBOX_API_URL=http://localhost:8000

# Optional: E2B Configuration (if using E2B instead of custom sandbox)
# E2B_API_KEY=your_e2b_api_key_here

# Optional: Anthropic API (if using Claude models via LiteLLM)
# ANTHROPIC_API_KEY=your_anthropic_api_key_here

# Optional: Langfuse Configuration (for tracing and monitoring)
# LANGFUSE_SECRET_KEY=your_langfuse_secret_key
# LANGFUSE_PUBLIC_KEY=your_langfuse_public_key
# LANGFUSE_HOST=https://cloud.langfuse.com

# Legacy Database Configuration (for backward compatibility)
# TARGET_DB_CONNECTION_URI=postgresql://user:password@host:port/database

# Logging Configuration
LOG_LEVEL=INFO

# Enhanced Agent Configuration
AGENT_MODEL=gpt-4.1
AGENT_TEMPERATURE=0.2
AGENT_MAX_TOKENS=10000
STREAM_ANALYSIS=true

# Performance Tuning
ENABLE_CACHING=true
CACHE_TTL=300

# Security Settings
ENFORCE_READ_ONLY=true
MAX_QUERY_RESULTS=10000
QUERY_TIMEOUT=60

# Development Settings
DEBUG_MODE=false
ENABLE_QUERY_LOGGING=false
ENABLE_PERFORMANCE_MONITORING=false

# MongoDB Atlas Setup Instructions:
# 1. Create MongoDB Atlas account at https://www.mongodb.com/atlas
# 2. Create a new cluster or use existing cluster
# 3. Create database user with read permissions
# 4. Get connection string from Atlas dashboard
# 5. Replace username, password, and database in connection string above
# 6. Ensure IP address is whitelisted in Atlas network access settings
# 7. Test connection using: python -c "from data_analyzer_agent.main_enhanced import enhanced_data_analyzer_agent; import asyncio; print(asyncio.run(enhanced_data_analyzer_agent.test_database_connection()))"

# MCP MongoDB Server Setup:
# 1. Install Node.js if not already installed
# 2. Run: npm install -g mongodb-mcp-server
# 3. Verify installation: mongodb-mcp-server --version
# 4. The enhanced agent will automatically use the MCP server

# Example Usage:
# 1. Copy this file to .env
# 2. Fill in your actual API keys and connection strings
# 3. Run: python run_agent_enhanced.py
# 4. Try query: "Analyze users collection and show engagement patterns"
